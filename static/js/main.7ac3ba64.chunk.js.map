{"version":3,"sources":["actions/booleanFiltering.js","actions/setSelected.js","actions/setOrderBy.js","actions/setOrderDirection.js","actions/deleteItems.js","actions/filterAction.js","actions/enumFiltering.js","actions/stringFiltering.js","components/table_view/table.jsx","App.js","serviceWorker.js","util/createUsers.js","reducers/initializationReducer.js","util/applyFilters.js","reducers/filterReducer.js","reducers/selectionReducer.js","reducers/orderReducer.js","reducers/orderDirectionReducer.js","reducers/filterParamsReducer.js","reducers/index.js","index.js"],"names":["booleanFiltering","booleanValue","type","payload","selection","rows","orderBy","orderColumn","orderDirection","direction","deleteItems","selected","filterAction","filterObject","array","enumFiltering","values","stringFiltering","string","descendingComparator","a","b","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","dispatch","useDispatch","useSelector","state","Toolbar","clsx","Typography","variant","Tooltip","IconButton","aria-label","useStyles","margin","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","container","maxHeight","sticky","left","zIndex","EnhancedTable","initialData","filteredRows","filteredData","Paper","length","FormControlLabel","control","Switch","boolean","target","TextField","value","options","autosize","isMulti","console","log","data","Button","TableContainer","Table","aria-labelledby","stickyHeader","newSelecteds","n","name","orderDirectionAction","orderByAction","TableBody","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","component","scope","Avatar","src","avatar","visits","email","address","zipcode","bio","style","weekday","App","Boolean","window","location","hostname","match","createUser","faker","findName","internet","streetAddress","zipCode","random","number","lorem","sentence","date","createUsers","numUsers","Array","from","initializationReducer","action","filter","item","includes","applyFilters","filterReducer","selectionReducer","orderReducer","orderDirectionReducer","filterParamsReducer","enumeration","forEach","element","push","combinedReducer","combineReducers","initialArray","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ac3ba64.chunk.js","sourcesContent":["const booleanFiltering = booleanValue => {\r\n  return {\r\n    type: \"BOOLEAN_FILTERING\",\r\n    payload: booleanValue\r\n  };\r\n};\r\n\r\nexport default booleanFiltering;\r\n","const selection = rows => {\r\n    return {\r\n      type: \"SELECT_ROWS\",\r\n      payload: rows\r\n    };\r\n  };\r\n  \r\n  export default selection;\r\n  ","const orderBy = orderColumn => {\r\n  return {\r\n    type: \"SET_ORDER\",\r\n    payload: orderColumn\r\n  };\r\n};\r\n\r\nexport default orderBy;\r\n","const orderDirection = direction => {\r\n    return {\r\n      type: \"SET_ORDER_DIRECTION\",\r\n      payload: direction\r\n    };\r\n  };\r\n  \r\n  export default orderDirection; ","const deleteItems = selected => {\r\n    return {\r\n      type: \"DELETE_ITEMS\",\r\n      payload: selected\r\n    };\r\n  };\r\n  \r\n  export default deleteItems;\r\n  ","const filterAction = (filterObject, array) => {\r\n  return {\r\n    type: \"FILTER\",\r\n    payload: { filterObject, array }\r\n  };\r\n};\r\n\r\nexport default filterAction;\r\n","const enumFiltering = values => {\r\n  return {\r\n    type: \"ENUM_FILTERING\",\r\n    payload: values\r\n  };\r\n};\r\n\r\nexport default enumFiltering;\r\n","const stringFiltering = string => {\r\n    return {\r\n      type: \"STRING_FILTERING\",\r\n      payload: string\r\n    };\r\n  };\r\n  \r\n  export default stringFiltering;\r\n  ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport booleanFiltering from \"../../actions/booleanFiltering\";\r\nimport selection from \"../../actions/setSelected\";\r\nimport orderByAction from \"../../actions/setOrderBy\";\r\nimport orderDirectionAction from \"../../actions/setOrderDirection\";\r\nimport Select from \"react-select\";\r\nimport deleteItems from \"../../actions/deleteItems\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport filterAction from \"../../actions/filterAction\";\r\nimport enumFiltering from \"../../actions/enumFiltering\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport stringFiltering from \"../../actions/stringFiltering\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Name\" },\r\n  { id: \"avatar\", numeric: false, disablePadding: false, label: \"Avatar\" },\r\n  { id: \"visits\", numeric: true, disablePadding: false, label: \"Total visits\" },\r\n  { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\r\n  { id: \"address\", numeric: false, disablePadding: false, label: \"Address\" },\r\n  { id: \"zipcode\", numeric: false, disablePadding: false, label: \"Zipcode\" },\r\n  { id: \"bio\", numeric: false, disablePadding: false, label: \"Bio\" },\r\n  { id: \"active\", numeric: false, disablePadding: false, label: \"Active\" },\r\n  { id: \"weekday\", numeric: false, disablePadding: false, label: \"Weekday\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all rows\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n  const dispatch = useDispatch();\r\n  const selected = useSelector(state => state.selected);\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Data Grid\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            onClick={() => dispatch(deleteItems(selected))}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n    width: \"70%\"\r\n  },\r\n  paper: {\r\n    width: \"70%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  container: {\r\n    maxHeight: 800\r\n  },\r\n  sticky: {\r\n    position: \"sticky\",\r\n    left: 0,\r\n    zIndex: 2,\r\n    backgroundColor: \"#ffffff\"\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const orderBy = useSelector(state => state.orderBy);\r\n  const order = useSelector(state => state.orderDirection);\r\n  const selected = useSelector(state => state.selected);\r\n  const filterObject = useSelector(state => state.filterObject);\r\n  const rows = useSelector(state => {\r\n    return state.initialData;\r\n  });\r\n  let filteredRows = useSelector(state => state.filteredData);\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    dispatch(orderDirectionAction(isAsc ? \"desc\" : \"asc\"));\r\n    dispatch(orderByAction(property));\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      dispatch(selection(newSelecteds));\r\n      return;\r\n    }\r\n    dispatch(selection([]));\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    dispatch(selection(newSelected));\r\n  };\r\n\r\n  const handleBooleanFilter = event => {\r\n    dispatch(booleanFiltering(event.target.checked));\r\n    dispatch(filterAction(filterObject, rows));\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n  const selectOptions = [\r\n    { value: \"Monday\", label: \"Monday\" },\r\n    { value: \"Tuesday\", label: \"Tuesday\" },\r\n    { value: \"Wednesday\", label: \"Wednesday\" },\r\n    { value: \"Thursday\", label: \"Thursday\" },\r\n    { value: \"Friday\", label: \"Friday\" },\r\n    { value: \"Saturday\", label: \"Saturday\" },\r\n    { value: \"Sunday\", label: \"Sunday\" }\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <FormControlLabel\r\n          control={\r\n            <>\r\n              <Switch\r\n                checked={filterObject.boolean}\r\n                onChange={handleBooleanFilter}\r\n              />\r\n            </>\r\n          }\r\n          label=\"Active filter\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Search by name, email or address\"\r\n          variant=\"outlined\"\r\n          onChange={event => {\r\n            dispatch(stringFiltering(event.target.value));\r\n            dispatch(filterAction(filterObject, rows));\r\n          }}\r\n        />\r\n        <Select\r\n          options={selectOptions}\r\n          autosize={true}\r\n          isMulti\r\n          onChange={(event, payload) => {\r\n            console.log(event);\r\n            dispatch(enumFiltering(event));\r\n            dispatch(filterAction(filterObject, rows));\r\n          }}\r\n        />\r\n        <CSVLink data={filteredRows} target=\"_blank\">\r\n          <Button onClick={() => console.log(filteredRows)}>\r\n            DOWNLOAD CSV\r\n          </Button>\r\n        </CSVLink>\r\n        <TableContainer className={classes.container}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={filteredRows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(filteredRows, getComparator(order, orderBy)).map(\r\n                (row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        className={classes.sticky}\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Avatar src={row.avatar} />\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.visits}</TableCell>\r\n                      <TableCell align=\"right\">{row.email}</TableCell>\r\n                      <TableCell align=\"right\">{row.address}</TableCell>\r\n                      <TableCell align=\"right\">{row.zipcode}</TableCell>\r\n                      <TableCell align=\"right\">{row.bio}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.active ? (\r\n                          <CheckCircleIcon style={{ color: \"#008000\" }} />\r\n                        ) : (\r\n                          <CancelIcon style={{ color: \"#DC143C\" }} />\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.weekday}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                }\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Datagrid from \"./components/table_view/table\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Datagrid />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import faker from \"faker\";\r\n\r\nconst createUser = () => {\r\n  return {\r\n    name: faker.name.findName(),\r\n    email: faker.internet.email(),\r\n    address: faker.address.streetAddress(),\r\n    zipcode: faker.address.zipCode(),\r\n    visits: faker.random.number(30),\r\n    bio: faker.lorem.sentence(),\r\n    avatar: faker.internet.avatar(),\r\n    active: faker.random.boolean(),\r\n    weekday: faker.date.weekday(),\r\n  };\r\n};\r\n\r\nconst createUsers = (numUsers = 1000) => {\r\n  return Array.from({ length: numUsers }, createUser);\r\n};\r\n\r\nexport default createUsers;\r\n","import createUsers from \"../util/createUsers\";\r\n\r\nconst initializationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"INITIALIZE\":\r\n      return (state.initialData = createUsers(action.payload));\r\n    case \"DELETE_ITEMS\":\r\n      return state.filter(\r\n        item => !action.payload.includes(item.name)\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default initializationReducer;\r\n","const applyFilters = (array, filterObject) => {\r\n  return array.filter(row => {\r\n    const stringStatement =\r\n      row.email.includes(filterObject.string) ||\r\n      row.name.includes(filterObject.string) ||\r\n      row.address.includes(filterObject.string);\r\n    return (\r\n      stringStatement &&\r\n      row.active === !filterObject.boolean &&\r\n      filterObject.weekday.includes(row.weekday)\r\n    );\r\n  });\r\n};\r\n\r\nexport default applyFilters;\r\n","import applyFilters from '../util/applyFilters';\r\n\r\nconst filterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"FILTER\":                                     \r\n      return (state = applyFilters(action.payload.array, action.payload.filterObject));\r\n    case \"DELETE_ITEMS\":\r\n      return state = state.filter(\r\n        item => !action.payload.includes(item.name)\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default filterReducer;\r\n","const selectionReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"SELECT_ROWS\":\r\n      return (state.selected = action.payload);\r\n    case \"DELETE_ITEMS\":\r\n      return state.selected = [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default selectionReducer;\r\n","const orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ORDER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;","const orderDirectionReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case \"SET_ORDER_DIRECTION\":\r\n        return action.payload;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default orderDirectionReducer;","const filterParamsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"BOOLEAN_FILTERING\":\r\n      return {\r\n        ...state,\r\n        boolean: action.payload\r\n      };\r\n    case \"STRING_FILTERING\":\r\n      return {\r\n        ...state,\r\n        string: action.payload\r\n      };\r\n    case \"ENUM_FILTERING\":\r\n      let enumeration = [];\r\n      // eslint-disable-next-line no-unused-expressions\r\n      if (action.payload !== null) {\r\n        action.payload.forEach(element => {\r\n          enumeration.push(element.value);\r\n        });\r\n      } else {\r\n        enumeration = [\r\n          \"Monday\",\r\n          \"Tuesday\",\r\n          \"Wednesday\",\r\n          \"Thursday\",\r\n          \"Friday\",\r\n          \"Saturday\",\r\n          \"Sunday\"\r\n        ];\r\n      }\r\n      return {\r\n        ...state,\r\n        weekday: enumeration\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default filterParamsReducer;\r\n","import initializationReducer from \"./initializationReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport selectionReducer from \"./selectionReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport orderDirectionReducer from \"./orderDirectionReducer\";\r\nimport filterParamsReducer from \"./filterParamsReducer\";\r\n\r\nconst combinedReducer = combineReducers({\r\n  initialData: initializationReducer,\r\n  filteredData: filterReducer,\r\n  selected: selectionReducer,\r\n  orderBy: orderReducer,\r\n  orderDirection: orderDirectionReducer,\r\n  filterObject: filterParamsReducer\r\n});\r\n\r\nexport default combinedReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport combinedReducer from \"./reducers\";\nimport createUsers from \"./util/createUsers\";\n\nconst initialArray = createUsers(1000);\nconst store = createStore(\n  combinedReducer,\n  {\n    initialData: initialArray,\n    filteredData: initialArray,\n    selected: [],\n    orderBy: \"name\",\n    orderDirection: \"asc\",\n    filterObject: {\n      string: \"\",\n      boolean: false,\n      weekday: [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n        \"Sunday\"\n      ]\n    }\n  },\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}